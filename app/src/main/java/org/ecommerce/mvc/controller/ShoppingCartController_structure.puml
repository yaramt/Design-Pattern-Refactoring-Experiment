@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "org.ecommerce.mvc.controller.ShoppingCartController",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/

digraph g {
    rankdir="TB"
    splines=polyline

    // Nodes
    subgraph cluster_1528280640 {
        label=ecommerce
        labeljust=l
        fillcolor="#FFA07A"
        style=filled
        node [style=filled, fillcolor="#F08080", shape=box]

        subgraph cluster_1497300 {
            label=mvc
            labeljust=l
            fillcolor="#87CEEB"
            style=filled
            node [style=filled, fillcolor="#87CEFA"]

            Product698823074[
                label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
                <TR><TD ALIGN="LEFT" >(C)Product</TD></TR>
                <HR/>
                <TR><TD ALIGN="LEFT" >-   id: int [1]</TD></TR>
                <TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
                <TR><TD ALIGN="LEFT" >-   price: double [1]</TD></TR>
                <HR/>
                <TR><TD ALIGN="LEFT" >+ setId(id: int): int</TD></TR>
                <TR><TD ALIGN="LEFT" >+ setName(name: String): String</TD></TR>
                <TR><TD ALIGN="LEFT" >+ setPrice(price: double): double</TD></TR>
                </TABLE>>
                shape=plaintext
            ];

            ShoppingCartController568240280[
                label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
                <TR><TD ALIGN="LEFT" >(C)ShoppingCartController</TD></TR>
                <HR/>
                <TR><TD ALIGN="LEFT" >-   cartModel: ShoppingCartModel [0..1]</TD></TR>
                <TR><TD ALIGN="LEFT" >-   cartView: ShoppingCartView [0..1]</TD></TR>
                <HR/>
                <TR><TD ALIGN="LEFT" >+ addProductToCartModel(product: Product)</TD></TR>
                <TR><TD ALIGN="LEFT" >+ removeProductFromCartModel(product: Product)</TD></TR>
                <TR><TD ALIGN="LEFT" >+ updateView()</TD></TR>
                </TABLE>>
                shape=plaintext
            ];

            ShoppingCartModel266151971[
                label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
                <TR><TD ALIGN="LEFT" >(C)ShoppingCartModel</TD></TR>
                <HR/>
                <TR><TD ALIGN="LEFT" >-   products: List&lt;Product&gt; [0..*]</TD></TR>
                <HR/>
                <TR><TD ALIGN="LEFT" >+ addProduct(product: Product)</TD></TR>
                <TR><TD ALIGN="LEFT" >+ removeProduct(product: Product)</TD></TR>
                </TABLE>>
                shape=plaintext
            ];

            ShoppingCartView2069886833[
                label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
                <TR><TD ALIGN="LEFT" >(C)ShoppingCartView</TD></TR>
                <HR/>
                <TR><TD ALIGN="LEFT" >+ showProducts(products: List&lt;Product&gt;)</TD></TR>
                </TABLE>>
                shape=plaintext
            ];
        }
    }

    // Edges
    ShoppingCartController568240280 -> ShoppingCartModel266151971[label="cartModel [0..1]"];
    ShoppingCartController568240280 -> ShoppingCartView2069886833[label="cartView [0..1]"];
    ShoppingCartModel266151971 -> Product698823074[label="products [0..*]"];
}
@enduml
